{"version":3,"sources":["webpack:///./src/components/ui/Tabs/Tabs.tsx","webpack:///./src/components/ui/Carousel/HorizontalCarousel.tsx","webpack:///./src/components/ui/Home/HomeBanner/HomeBanner.tsx","webpack:///./src/components/ui/Home/MoreArticles/MoreArticles.tsx","webpack:///./src/components/ui/Home/PostsPerTopic/PostsPerTopic.tsx","webpack:///./src/components/ui/Home/Topics/Topics.tsx","webpack:///./src/components/utils/PostsSelector.ts","webpack:///./src/pages/index.tsx","webpack:///./src/components/ui/AnnouncementHeader/AnnouncementHeader.tsx","webpack:///./src/components/ui/Tabs/Tab.tsx"],"names":["Tabs","props","initialState","Array","size","fill","activeTabs","setActiveTabs","useState","React","createElement","className","cn","Children","map","children","child","i","isValidElement","key","onClick","setActive","index","item","label","cloneElement","HorizontalCarousel","currents","setCurrents","current","slidesNum","actives","from","x","useEffect","nextCurrent","nextActives","activeSlides","unshift","pop","getNextActiveSlides","timer","setTimeout","clearTimeout","childrensArray","toArray","carouselLength","HomeBanner","href","Button","accent","Accent","primary","type","ButtonType","linkExternal","onClickLink","horizontalCarouselTopics","length","_toConsumableArray","sort","Math","random","topic","Link","title","to","url","dangerouslySetInnerHTML","__html","logo","MoreArticles","posts","showMore","setShowMore","list","setList","slice","setIndex","groupsNum","ceil","Fragment","keys","groupIndex","Group","renderGroup","postsList","groupSize","renderedItems","j","post","push","PostCard","suburl","secondary","custom","onClickFunction","loadMore","newIndex","newShowMore","newList","concat","PostsPerTopic","postsPerTopic","postsPerTopicBlock","Tab","p","Topics","floor","topics","Card","direction","Direction","vertical","aos","desc","PostsSelector","allPostsUrls","this","allPosts","buildPostsMap","_proto","prototype","get","getByTopic","postsUrlsPerTopic","postsUrlsPerTopicFlattened","reduce","acc","Object","filter","includes","obj","_objectSpread","getByCategory","postsUrlsPerCategory","postsUrlsPerCategoryFlattened","postsPerCategory","sortByDate","postsToFilter","postsMap","forEach","frontmatter","Home","_ref","data","postsSelector","allMdx","nodes","useAnimationOnScroll","PageLayout","Seo","isPost","AnnouncementHeader","topicsYaml","PageSection","Container","homeYaml","about_section","block","Block","icon","tabs_posts","Divider","horizontal","node"],"mappings":"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","file":"component---src-pages-index-tsx-ee085b56282dc169ced6.js","sourcesContent":["import cn from 'classnames';\nimport React, { useState } from 'react';\nimport './Tabs.scss';\n\ninterface TabsProps {\n    children: React.ReactNode;\n    size: number;\n    className?: string;\n}\n\nconst Tabs: React.FC<TabsProps> = (props: TabsProps) => {\n    const initialState = Array(props.size).fill('');\n    initialState[0] = '--active';\n    const [activeTabs, setActiveTabs] = useState(initialState);\n\n    const setActive = (index: number) => {\n        setActiveTabs(\n            activeTabs.map((item, i) => {\n                if (i == index) {\n                    return item === '' ? '--active' : '';\n                } else {\n                    return '';\n                }\n            })\n        );\n    };\n\n    return (\n        <div className={cn('tabs', props.className)}>\n            <div className=\"tabs__headers\">\n                {React.Children.map(props.children, (child, i) =>\n                    React.isValidElement(child) ? (\n                        <div\n                            className={`tabs__headers__item${activeTabs[i]}`}\n                            key={i}\n                            onClick={() => setActive(i)}\n                        >\n                            <h5> {child.props.label}</h5>\n                        </div>\n                    ) : (\n                        ''\n                    )\n                )}\n            </div>\n            <div className=\"tabs__content\">\n                {React.Children.map(props.children, (child, i) =>\n                    React.isValidElement(child)\n                        ? React.cloneElement(child, {\n                              className: `tabs__content__item${activeTabs[i]}`\n                          })\n                        : child\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Tabs;\n","import cn from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport './HorizontalCarousel.scss';\n\n//\ninterface HorizontalCarouselProps {\n    children?: React.ReactNode;\n    slidesNum: number;\n}\n\nconst getNextActiveSlides = (\n    activeSlides: number[],\n    current: number\n): number[] => {\n    activeSlides.unshift(current);\n    activeSlides.pop();\n    return activeSlides;\n};\n\nconst carouselLength = 3;\n\nconst getAnimationClassName = (index: number): string => {\n    if (index == 0) {\n        return 'horizontal-carousel__slide--first';\n    } else if (index == carouselLength - 1) {\n        return 'horizontal-carousel__slide--last';\n    } else {\n        return '';\n    }\n};\n\nconst HorizontalCarousel: React.FC<HorizontalCarouselProps> = (\n    props: HorizontalCarouselProps\n) => {\n    const [currents, setCurrents] = useState({\n        current: props.slidesNum - carouselLength,\n        actives: Array.from(new Array(carouselLength), (x, i) => i + props.slidesNum - carouselLength)\n    });\n    const slideTime = 2000;\n\n    useEffect(() => {\n        const nextCurrent =\n            (currents.current - 1 + props.slidesNum) % props.slidesNum;\n        const nextActives = getNextActiveSlides(currents.actives, nextCurrent);\n        const timer = setTimeout(\n            () => setCurrents({ current: nextCurrent, actives: nextActives }),\n            slideTime\n        );\n        return () => clearTimeout(timer);\n    }, [currents]);\n\n    const childrensArray = React.Children.toArray(props.children);\n\n    return (\n        <div className=\"horizontal-carousel\">\n            {currents.actives.map((x, i) => {\n                const child = childrensArray[x];\n                return (\n                    <div key={i} className={cn('horizontal-carousel__slide')}>\n                        {React.isValidElement(child)\n                            ? React.cloneElement(child, {\n                                  className: cn(\n                                      child.props.className,\n                                      getAnimationClassName(i) //to add animation in the child\n                                  )\n                              })\n                            : child}\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default HorizontalCarousel;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { Accent, ButtonType } from '../../../../globals';\nimport Button from '../../Button/Button';\nimport HorizontalCarousel from '../../Carousel/HorizontalCarousel';\nimport './HomeBanner.scss';\n\ninterface HomeBannerProps {\n    // carouselPosts: Record<string, Frontmatter>;\n    horizontalCarouselTopics: TopicDetails[];\n}\n\nconst HomeBanner: React.FC<HomeBannerProps> = (props: HomeBannerProps) => {\n    return (\n        <div className=\"home-banner\">\n            <div className=\"home-banner__content\">\n                <div className=\"home-banner__content__details\">\n                    <h1> Scientific blog template based on AI Summer</h1>\n\n                    <p>\n                        A full example of this template can be found on{' '}\n                        <a href=\"https://theaisummer.com\">theaisummer.com</a>\n                    </p>\n\n                    <Button\n                        accent={Accent.primary}\n                        type={ButtonType.linkExternal}\n                        onClickLink=\"https://theaisummer.com\"\n                        className=\"home-banner__content__details__cta\"\n                    >\n                        See AI Summer\n                    </Button>\n                </div>\n                <div className=\"home-banner__content__image\">\n                    <HorizontalCarousel\n                        slidesNum={props.horizontalCarouselTopics.length}\n                    >\n                        {[...props.horizontalCarouselTopics]\n                            .sort()\n                            .sort(() => Math.random() - 0.5)\n                            .map((topic, i) => (\n                                <Link\n                                    key={topic.title}\n                                    className=\"carousel-topic\"\n                                    to={`/topics/${topic.url}`}\n                                >\n                                    <div className=\"carousel-topic__logo-wrapper\">\n                                        <span\n                                            dangerouslySetInnerHTML={{\n                                                __html: topic.logo || ''\n                                            }}\n                                        ></span>\n                                    </div>\n                                    <div className=\"carousel-topic__title\">\n                                        <h4>{topic.title}</h4>\n                                    </div>\n                                </Link>\n                            ))}\n                    </HorizontalCarousel>\n                </div>\n            </div>\n            <div className=\"home-banner__background-wave\"></div>\n        </div>\n    );\n};\n\nexport default HomeBanner;\n","import React, { Fragment, useState } from 'react';\nimport { Accent, ButtonType } from '../../../../globals';\nimport Group from '../../../layout/Group/Group';\nimport Button from '../../Button/Button';\nimport PostCard from '../../Cards/PostCard/PostCard';\nimport './MoreArticles.scss';\n\ninterface MoreArticlesProps {\n    posts: Frontmatter[];\n}\n\nconst MoreArticles: React.FC<MoreArticlesProps> = (\n    props: MoreArticlesProps\n) => {\n    const limit = 3;\n    const length = props.posts.length;\n    const [showMore, setShowMore] = useState(true);\n    const [list, setList] = useState(props.posts.slice(0, 9));\n    const [index, setIndex] = useState(9);\n\n    const loadMore = () => {\n        const newIndex = index + limit;\n        const newShowMore = newIndex < length - 1;\n        const newList = list.concat(props.posts.slice(index, newIndex));\n        setIndex(newIndex);\n        setList(newList);\n        setShowMore(newShowMore);\n    };\n\n    const groupSize = 3;\n    const groupsNum = Math.ceil(list.length / groupSize);\n\n    const renderGroup = (\n        groupIndex: number,\n        postsList: Frontmatter[],\n        groupSize: number\n    ) => {\n        const renderedItems = [];\n\n        for (let j = 0; j < groupSize; j++) {\n            const post = postsList[groupIndex * groupSize + j];\n\n            post\n                ? renderedItems.push(<PostCard key={post.suburl} post={post} />)\n                : renderedItems.push('');\n        }\n        return renderedItems;\n    };\n\n    return (\n        <Fragment>\n            {[...Array(groupsNum).keys()].map((groupIndex) => (\n                <Group key={groupIndex} size={groupSize}>\n                    {renderGroup(groupIndex, list, groupSize)}\n                </Group>\n            ))}\n\n            {showMore && (\n                <Button\n                    accent={Accent.secondary}\n                    type={ButtonType.custom}\n                    onClickFunction={() => loadMore()}\n                    className=\"load-more-btn\"\n                >\n                    <span>Load More</span>\n                </Button>\n            )}\n        </Fragment>\n    );\n};\n\nexport default MoreArticles;\n","import React from 'react';\nimport Group from '../../../layout/Group/Group';\nimport PostCard from '../../Cards/PostCard/PostCard';\nimport Tab from '../../Tabs/Tab';\nimport Tabs from '../../Tabs/Tabs';\nimport './PostsPerTopic.scss';\n\ninterface PostsPerTopicProps {\n    posts: Record<string, Frontmatter>;\n    postsPerTopic: PostsPerTopicBlock[];\n}\n\nconst PostsPerTopic: React.FC<PostsPerTopicProps> = (\n    props: PostsPerTopicProps\n) => {\n    return (\n        <Tabs\n            size={props.postsPerTopic.length}\n            className=\"posts-per-topic__tabs\"\n        >\n            {props.postsPerTopic.map((postsPerTopicBlock) => {\n                return (\n                    <Tab\n                        key={postsPerTopicBlock.topic}\n                        label={postsPerTopicBlock.topic}\n                    >\n                        <Group size={postsPerTopicBlock.posts.length}>\n                            {postsPerTopicBlock.posts.map((p) => {\n                                return (\n                                    <PostCard\n                                        key={p}\n                                        post={props.posts[p] || ''}\n                                        className=\"posts-per-topic__tabs__card\"\n                                    />\n                                );\n                            })}\n                        </Group>\n                    </Tab>\n                );\n            })}\n        </Tabs>\n    );\n};\n\nexport default PostsPerTopic;\n","import React, { Fragment } from 'react';\nimport { Direction } from '../../../../globals';\nimport Group from '../../../layout/Group/Group';\nimport Card from '../../Cards/Card';\nimport './Topics.scss';\n\ninterface TopicsProps {\n    topics: TopicDetails[];\n}\n\nconst renderGroup = (\n    groupIndex: number,\n    topics: TopicDetails[],\n    groupSize: number\n) => {\n    const renderedItems = [];\n\n    for (let j = 0; j < groupSize; j++) {\n        const topic = topics[groupIndex * groupSize + j];\n        renderedItems.push(\n            <Card\n                key={topic.title}\n                direction={Direction.vertical}\n                onClickLink={`topics/${topic.url}`}\n                className=\"topic-card-light\"\n                aos=\"zoom-in\"\n            >\n                <span\n                    dangerouslySetInnerHTML={{\n                        __html: topic.logo || ''\n                    }}\n                    className=\"topic-card-light__logo\"\n                ></span>\n                <h4 className=\"topic-card-light__title\">{topic.title}</h4>\n                <p className=\"topic-card-light__desc\">{topic.desc}</p>\n            </Card>\n        );\n    }\n    return renderedItems;\n};\n\nconst Topics: React.FC<TopicsProps> = (props: TopicsProps) => {\n    const groupSize = 3;\n    const groupsNum = Math.floor(props.topics.length / groupSize);\n\n    return (\n        <Fragment>\n            {[...Array(groupsNum).keys()].map((groupIndex) => (\n                <Group key={groupIndex} size={groupSize}>\n                    {renderGroup(groupIndex, props.topics, groupSize)}\n                </Group>\n            ))}\n        </Fragment>\n    );\n};\n\nexport default Topics;\n","export class PostsSelector {\n    allPosts: Record<string, Frontmatter>;\n\n    constructor(allPostsUrls: PostDetails[]) {\n        this.allPosts = this.buildPostsMap(allPostsUrls);\n    }\n\n    get(): Record<string, Frontmatter> {\n        return this.allPosts;\n    }\n\n    getByTopic(\n        postsUrlsPerTopic: PostsPerTopicBlock[]\n    ): {\n        posts: Record<string, Frontmatter>;\n        postsPerTopic: PostsPerTopicBlock[];\n    } {\n        const postsUrlsPerTopicFlattened = postsUrlsPerTopic.reduce(\n            (acc: string[], x) => acc.concat(x.posts),\n            []\n        );\n\n        return {\n            posts: Object.keys(this.allPosts)\n                .filter((post) => postsUrlsPerTopicFlattened.includes(post))\n                .reduce((obj, key) => {\n                    return {\n                        ...obj,\n                        [key]: this.allPosts[key]\n                    };\n                }, {}),\n            postsPerTopic: postsUrlsPerTopic\n        };\n    }\n\n    getByCategory(\n        postsUrlsPerCategory: PostsPerCategory[]\n    ): {\n        posts: Record<string, Frontmatter>;\n        postsPerCategory: PostsPerCategory[];\n    } {\n        const postsUrlsPerCategoryFlattened = postsUrlsPerCategory.reduce(\n            (acc: string[], x) => acc.concat(x.posts),\n            []\n        );\n\n        return {\n            posts: Object.keys(this.allPosts)\n                .filter((post) => postsUrlsPerCategoryFlattened.includes(post))\n                .reduce((obj, key) => {\n                    return {\n                        ...obj,\n                        [key]: this.allPosts[key]\n                    };\n                }, {}),\n            postsPerCategory: postsUrlsPerCategory\n        };\n    }\n\n    sortByDate() {\n        // TODO:\n        return this.allPosts;\n    }\n\n    filter(postsToFilter: string[]): Record<string, Frontmatter> {\n        return Object.keys(this.allPosts)\n            .filter((post) => postsToFilter.includes(post))\n            .reduce((obj, key) => {\n                return {\n                    ...obj,\n                    [key]: this.allPosts[key]\n                };\n            }, {});\n    }\n\n    private buildPostsMap(allPosts: { frontmatter: Frontmatter }[]) {\n        const postsMap: Record<string, Frontmatter> = {};\n\n        allPosts.forEach((p) => {\n            postsMap[p.frontmatter.suburl] = p.frontmatter;\n        });\n        // console.log('building postsMap');\n\n        return postsMap;\n    }\n}\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Container from '../components/layout/Container/Container';\nimport Group from '../components/layout/Group/Group';\nimport PageLayout from '../components/layout/PageLayout/PageLayout';\nimport PageSection from '../components/layout/PageSection/PageSection';\nimport AnnouncementHeader from '../components/ui/AnnouncementHeader/AnnouncementHeader';\nimport Block from '../components/ui/Cards/Block';\nimport Divider from '../components/ui/Divider/Divider';\nimport HomeBanner from '../components/ui/Home/HomeBanner/HomeBanner';\nimport MoreArticles from '../components/ui/Home/MoreArticles/MoreArticles';\nimport PostsPerTopic from '../components/ui/Home/PostsPerTopic/PostsPerTopic';\nimport Topics from '../components/ui/Home/Topics/Topics';\nimport { PostsSelector } from '../components/utils/PostsSelector';\nimport Seo from '../components/utils/Seo';\nimport { useAnimationOnScroll } from '../components/utils/useAnimateOnScroll';\nimport { Direction } from '../globals';\nimport './index.scss';\n\ninterface HomeProps {\n    data: {\n        homeYaml: {\n            about_section: AboutSectionBlock[];\n            tabs_posts: PostsPerTopicBlock[];\n        };\n        allMdx: {\n            nodes: PostDetails[];\n        };\n        topicsYaml: {\n            topics: TopicDetails[];\n        };\n    };\n}\n\nconst Home: React.FC<HomeProps> = ({ data }: HomeProps) => {\n    const postsSelector = new PostsSelector(data.allMdx.nodes);\n    useAnimationOnScroll();\n    return (\n        <PageLayout>\n            <Seo isPost={false} />\n            <AnnouncementHeader />\n            <HomeBanner horizontalCarouselTopics={data.topicsYaml.topics} />\n            <PageSection className=\"what-is-section\">\n                <Container>\n                    <div className=\"section-text\">\n                        <h2>Lorem ipsum dolor sit amet</h2>\n                        <p>\n                            Consectetur adipiscing elit, sed do eiusmod tempor\n                            incididunt ut labore et dolore magna aliqua. Rutrum\n                            quisque non tellus orci ac. Arcu risus quis varius\n                            quam quisque id diam vel quam. Porta non pulvinar\n                            neque laoreet suspendisse interdum consectetur\n                            libero id. Urna molestie at elementum eu facilisis\n                            sed odio morbi quis. Orci nulla pellentesque\n                            dignissim enim sit amet.\n                        </p>\n                        <p>\n                            Dui id ornare arcu odio ut sem. Semper viverra nam\n                            libero justo laoreet sit amet cursus. Nec feugiat in\n                            fermentum posuere urna nec tincidunt. Adipiscing\n                            elit ut aliquam purus sit amet luctus venenatis\n                        </p>\n                        <p>\n                            Consectetur adipiscing elit ut aliquam purus sit.\n                            Tempor commodo ullamcorper a lacus vestibulum.\n                            Mauris nunc congue nisi vitae suscipit\n                        </p>\n                    </div>\n\n                    <Group size={2}>\n                        {data.homeYaml.about_section\n                            .slice(0, 2)\n                            .map((block, index) => {\n                                return (\n                                    <Block\n                                        key={index}\n                                        direction={Direction.vertical}\n                                        aos=\"zoom-in\"\n                                    >\n                                        <span\n                                            dangerouslySetInnerHTML={{\n                                                __html: block.icon\n                                            }}\n                                        ></span>\n                                        <h3>{block.title}</h3>\n                                        <div\n                                            dangerouslySetInnerHTML={{\n                                                __html: block.desc\n                                            }}\n                                        ></div>\n                                    </Block>\n                                );\n                            })}\n                    </Group>\n                    <Group size={2}>\n                        {data.homeYaml.about_section\n                            .slice(2, 4)\n                            .map((block, index) => {\n                                return (\n                                    <Block\n                                        key={index}\n                                        direction={Direction.vertical}\n                                        aos=\"zoom-in\"\n                                    >\n                                        <span\n                                            dangerouslySetInnerHTML={{\n                                                __html: block.icon\n                                            }}\n                                        ></span>\n                                        <h3>{block.title}</h3>\n                                        <div\n                                            dangerouslySetInnerHTML={{\n                                                __html: block.desc\n                                            }}\n                                        ></div>\n                                    </Block>\n                                );\n                            })}\n                    </Group>\n                </Container>\n            </PageSection>\n            <PageSection className=\"posts-per-topic-section\">\n                <Container>\n                    <div className=\"section-text\">\n                        <h2>Explore our content</h2>\n                        <p>\n                            Eget mauris pharetra et ultrices neque ornare aenean\n                            euismod. Nunc mi ipsum faucibus vitae aliquet nec\n                            ullamcorper sit. Eu lobortis elementum nibh tellus\n                            molestie nunc non blandit massa. Massa tempor nec\n                            feugiat nisl pretium\n                        </p>\n                    </div>\n\n                    <PostsPerTopic\n                        {...postsSelector.getByTopic(data.homeYaml.tabs_posts)}\n                    />\n                </Container>\n            </PageSection>\n            <PageSection className=\"topics-section\">\n                <Container>\n                    <div className=\"section-text\">\n                        <h2>Topics</h2>\n                        <p>\n                            Get lorem dolor sed viverra. Id faucibus nisl\n                            tincidunt eget nullam non nisi est sit. Aliquam\n                            vestibulum morbi blandit cursus risus at ultrices.\n                        </p>\n                        <p>\n                            Vel turpis nunc eget lorem. Scelerisque fermentum\n                            dui faucibus in ornare quam viverra orci.\n                        </p>\n                    </div>\n                    <Topics topics={data.topicsYaml.topics} />\n                </Container>\n            </PageSection>\n\n            <Divider direction={Direction.horizontal} />\n            <PageSection className=\"more-articles-section\">\n                <Container>\n                    <div className=\"section-text\">\n                        <h2>More articles</h2>\n                    </div>\n                    <MoreArticles\n                        posts={data.allMdx.nodes.map(\n                            (node) => node.frontmatter\n                        )}\n                    />\n                </Container>\n            </PageSection>\n        </PageLayout>\n    );\n};\n\nexport const homeQuery = graphql`\n    {\n        homeYaml {\n            tabs_posts {\n                posts\n                topic\n            }\n            about_section {\n                desc\n                icon\n                title\n            }\n        }\n        allMdx(\n            filter: { frontmatter: { layout: { eq: \"BlogPage\" } } }\n            sort: { fields: frontmatter___publishedAt, order: DESC }\n        ) {\n            nodes {\n                frontmatter {\n                    author\n                    description\n                    image {\n                        childImageSharp {\n                            fluid {\n                                ...GatsbyImageSharpFluid\n                            }\n                        }\n                    }\n                    layout\n                    suburl\n                    tags\n                    title\n                }\n            }\n        }\n        topicsYaml {\n            topics {\n                desc\n                title\n                url\n                logo\n            }\n        }\n    }\n`;\n\nexport default Home;\n","import React from 'react';\nimport { Accent, ButtonType } from '../../../globals';\nimport Button from '../Button/Button';\nimport './AnnouncementHeader.scss';\n\ninterface AnnouncementHeaderProps {\n    className?: string;\n    children?: React.ReactNode;\n}\n\n//hardcoded it to avoid copy pasting everywhere\nconst AnnouncementHeader: React.FC<AnnouncementHeaderProps> = (\n    props: AnnouncementHeaderProps\n) => {\n    return (\n        <div className={props.className || 'announcement-header'}>\n            <div className=\"announcement-header__content\">\n                <p>Tincidunt dui ut ornare lectus sit amet est placerat in.</p>\n                <Button\n                    accent={Accent.primary}\n                    type={ButtonType.linkExternal}\n                    onClickLink=\"\"\n                    className=\"announcement-header__content__button\"\n                >\n                    Ultrices eros\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default AnnouncementHeader;\n","import React from 'react';\n\ninterface TabProps {\n    label: string;\n    children: React.ReactNode;\n    className?: string;\n}\n\nconst Tab: React.FC<TabProps> = (props: TabProps) => {\n    return <div className={props.className}>{props.children}</div>;\n};\n\nexport default Tab;\n"],"sourceRoot":""}